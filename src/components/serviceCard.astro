---
import "../styles/serviceCard.css";
import Button from "../components/button.astro";

interface Props {
  imageSrc?: string;
  title: string;
  description1: string;
  description2: string;
  buttonHref?: string;
  buttonColor?: string;
  buttonText?: string;
  useLottie?: boolean;
  lottieSrc?: string;
  useVideo?: boolean;
  videoSrc?: string;
}

const {
  imageSrc,
  title,
  description1,
  description2,
  buttonHref = "http://wa.link/2d3uae",
  buttonColor = "yellowAlt",
  buttonText = "Pesan Sekarang",
  useLottie = false,
  lottieSrc,
  useVideo = false,
  videoSrc,
} = Astro.props;

/**
 * Parse a description into [{ emoji, text }] entries.
 * @param {string} description2
 * @returns {Array<{emoji: string, text: string}>}
 */
function parseEmojiList(description2: string) {
  const EMOJI_REGEX = /([\p{Emoji}]+)/gu;
  const matches = Array.from(description2.matchAll(EMOJI_REGEX));

  if (matches.length === 0) return [];

  return matches
    .map((match, i) => {
      const emoji = match[1];
      const start = (match.index ?? 0) + emoji.length;
      const nextMatch = matches[i + 1];
      const end = nextMatch ? nextMatch.index : description2.length;
      const text = description2.slice(start, end).trim();

      return text ? { emoji, text } : null;
    })
    .filter((item) => item !== null);
}
---

<div class="serviceCard">
  {
    useVideo ? (
      <div class="video-wrapper">
        <video
          class="serviceVideo"
          src={videoSrc}
          autoplay
          loop
          muted
          playsinline
        />
      </div>
    ) : !useLottie ? (
      <img class="serviceImage" src={imageSrc} alt={title} />
    ) : (
      <div class="lottie-wrapper">
        <dotlottie-wc
          src={lottieSrc}
          class="lottieAnim"
          speed="1"
          autoplay
          loop
          mode="bounce"
        />
      </div>
    )
  }
  <div class="serviceText">
    <h3>{title}</h3>
    <div class="description">
      <p>
        {description1}
      </p>
      {
        parseEmojiList(description2).length > 0 ? (
          <ul class="emoji-list">
            {parseEmojiList(description2).map((item) => (
              <li>
                <span class="emoji">{item.emoji}</span> {item.text}
              </li>
            ))}
          </ul>
        ) : (
          <p>{description2}</p>
        )
      }
    </div>
    <Button
      href={buttonHref}
      color={buttonColor}
      showWhatsappIcon
      shakeOnHover={true}
      >{buttonText}
    </Button>
  </div>
</div>
