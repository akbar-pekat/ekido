---
import "../../styles/blogContent.css";
import Base from "../../layouts/base.astro";
import Navbar from "../../layouts/navbar.astro";
import About from "../../layouts/about.astro";
import Footer from "../../layouts/footer.astro";
import JsonLd from "../../components/JsonLd.astro";

import { getAllPosts, getPost } from "../../lib/client";

export async function getStaticPaths() {
  const data = await getAllPosts();
  const allPosts = data.publication.posts.edges;
  return allPosts.map((post) => {
    return {
      params: { slug: post.node.slug },
    };
  });
}
const { slug } = Astro.params;
const post = await getPost(slug);

function formatDate(isoDate: string) {
  const date = new Date(isoDate);
  const day = date.getDate();
  const monthNames = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Agu",
    "Sep",
    "Okt",
    "Nov",
    "Des",
  ];
  const month = monthNames[date.getMonth()];
  const year = date.getFullYear();
  return `${day} ${month} ${year}`;
}

const formattedDate = post.publishedAt ? formatDate(post.publishedAt) : "";

const title = `${post.title} | Ekido Blog`;
const description = post.subtitle || post.brief;
const keywords = post.tags
  ? post.tags.map((tag) => tag.name).join(", ")
  : "ekido, blog, artikel";
const ogImage =
  post.coverImage?.url ||
  "https://res.cloudinary.com/apclient/image/upload/v1753514918/ogimage_fphgur.png";
const canonicalUrl = new URL(
  `/blog/${slug}`,
  Astro.site || "https://ekidocreative.com"
).toString();

const jsonLdData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: post.title,
  description: post.subtitle || post.brief,
  image: post.coverImage?.url,
  datePublished: post.publishedAt,
  author: {
    "@type": "Person",
    name: post.author.name,
  },
  publisher: {
    "@type": "Organization",
    name: "Ekido",
    logo: {
      "@type": "ImageObject",
      url: "https://ekido.id/logo-svg.svg",
    },
  },
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": new URL(Astro.url.pathname, Astro.site).href,
  },
};
---

<Base
  title={title}
  description={description}
  keywords={keywords}
  ogImage={ogImage}
  canonicalUrl={canonicalUrl}
>
  <JsonLd data={jsonLdData} />
  <Navbar />
  <div
    class="bigThumbnail"
    style={`background: url('${post.coverImage?.url}') center/cover no-repeat;`}
  >
    <div class="container">
      <div class="textContainer">
        <div class="blogData">
          <div class="publishDate">{formattedDate}</div>
          <div class="dot">â€¢</div>
          <div class="readingTime">
            {post.readTimeInMinutes} min reading time
          </div>
        </div>
        <div class="blogTitle">{post.title}</div>
      </div>
    </div>
  </div>
  <div class="pageContent">
    <div class="backButtonContainer">
      <a href="/" class="backButton">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M19 12H5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M12 19L5 12L12 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        Kembali ke Beranda
      </a>
    </div>
    <Fragment set:html={post.content.html} />
    <div class="backButtonContainer bottom">
      <a href="/" class="backButton">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M19 12H5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M12 19L5 12L12 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        Kembali ke Beranda
      </a>
    </div>
  </div>
  <About title="Artikel lainnya" currentSlug={slug} />
  <Footer />
</Base>

<style>
  .backButtonContainer {
    margin-bottom: 20px;
  }
  
  .backButtonContainer.bottom {
    margin-top: 20px;
    margin-bottom: 0;
  }
  
  .backButton {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    color: #5150e3;
    font-family: "General Sans", sans-serif;
    font-size: 16px;
    font-weight: 500;
    text-decoration: none;
    padding: 8px 16px;
    border-radius: 4px;
    background-color: rgba(81, 80, 227, 0.1);
    transition: background-color 0.3s ease;
  }
  
  .backButton:hover {
    background-color: rgba(81, 80, 227, 0.2);
  }
  
  .backButton svg {
    width: 20px;
    height: 20px;
  }
  
  @media screen and (max-width: 768px) {
    .backButton {
      font-size: 14px;
      padding: 6px 12px;
    }
    
    .backButton svg {
      width: 16px;
      height: 16px;
    }
  }
</style>
